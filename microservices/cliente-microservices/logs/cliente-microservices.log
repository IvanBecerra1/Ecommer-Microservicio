2025-09-20 17:07:12 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:12 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:14 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:14 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:14 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:14 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:14 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:14 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:14 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:14 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:15 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:15 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:16 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:16 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:16 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:16 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:16 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:16 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:16 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:16 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:16 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:16 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:16 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:16 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:16 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:17 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:17 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:17 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:17 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:17 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:17 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:17 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:17 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:17 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:17 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:17 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:17 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:17 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:47 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:47 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:47 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:47 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:47 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:47 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:47 - %PARSER_ERROR[mmsg]
2025-09-20 17:07:47 - %PARSER_ERROR[mmsg]
2025-09-20 17:23:44 - Fetching config from server at : http://localhost:8888
2025-09-20 17:23:44 - Located environment: name=cliente-microservices, profiles=[default], label=null, version=null, state=null
2025-09-20 17:23:46 - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-09-20 17:23:46 - Finished Spring Data repository scanning in 116 ms. Found 1 MongoDB repository interface.
2025-09-20 17:23:46 - BeanFactory id=b0786398-f68e-33c3-ad53-43bd2e86cdd3
2025-09-20 17:23:47 - Tomcat initialized with port 8091 (http)
2025-09-20 17:23:47 - Starting service [Tomcat]
2025-09-20 17:23:47 - Starting Servlet engine: [Apache Tomcat/10.1.44]
2025-09-20 17:23:47 - Initializing Spring embedded WebApplicationContext
2025-09-20 17:23:47 - Root WebApplicationContext: initialization completed in 2145 ms
2025-09-20 17:23:47 - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.5.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/17.0.12+8-LTS-286"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='root', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@64688978], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4d525897, com.mongodb.Jep395RecordCodecProvider@25f14e93, com.mongodb.KotlinCodecProvider@24435620]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@4c02899], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-09-20 17:23:47 - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=34286700, minRoundTripTimeNanos=0}
2025-09-20 17:23:48 - Eureka HTTP Client uses RestTemplate.
2025-09-20 17:23:48 - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-09-20 17:23:48 - Exposing 1 endpoint beneath base path '/actuator'
2025-09-20 17:23:48 - Setting initial instance status as: STARTING
2025-09-20 17:23:48 - Initializing Eureka in region us-east-1
2025-09-20 17:23:48 - Resolving eureka endpoints via configuration
2025-09-20 17:23:49 - Disable delta property : false
2025-09-20 17:23:49 - Single vip registry refresh property : null
2025-09-20 17:23:49 - Force full registry fetch : false
2025-09-20 17:23:49 - Application is null : false
2025-09-20 17:23:49 - Registered Applications size is zero : true
2025-09-20 17:23:49 - Application version is -1: true
2025-09-20 17:23:49 - Getting all instance registry info from the eureka server
2025-09-20 17:23:49 - The response status is 200
2025-09-20 17:23:49 - Starting heartbeat executor: renew interval is: 30
2025-09-20 17:23:49 - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-09-20 17:23:49 - Discovery Client initialized at timestamp 1758399829529 with initial instances count: 0
2025-09-20 17:23:49 - Registering application CLIENTE-MICROSERVICES with eureka with status UP
2025-09-20 17:23:49 - Saw local status change event StatusChangeEvent [timestamp=1758399829533, current=UP, previous=STARTING]
2025-09-20 17:23:49 - DiscoveryClient_CLIENTE-MICROSERVICES/test:cliente-microservices:8091: registering service...
2025-09-20 17:23:49 - Tomcat started on port 8091 (http) with context path '/'
2025-09-20 17:23:49 - Updating port to 8091
2025-09-20 17:23:49 - DiscoveryClient_CLIENTE-MICROSERVICES/test:cliente-microservices:8091 - registration status: 204
2025-09-20 17:23:49 - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-20 17:23:49 - Initializing Servlet 'dispatcherServlet'
2025-09-20 17:23:49 - Completed initialization in 1 ms
2025-09-20 17:24:07 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoNodeIsRecoveringException: Command failed with error 11600 (InterruptedAtShutdown): 'interrupted at shutdown' on server localhost:27017. The full response is {"ok": 0.0, "errmsg": "interrupted at shutdown", "code": 11600, "codeName": "InterruptedAtShutdown"}
	at com.mongodb.internal.connection.ProtocolHelper.createSpecialException(ProtocolHelper.java:264)
	at com.mongodb.internal.connection.ProtocolHelper.getCommandFailureException(ProtocolHelper.java:206)
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:520)
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:469)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.lookupServerDescription(DefaultServerMonitor.java:249)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.run(DefaultServerMonitor.java:176)
2025-09-20 17:24:17 - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.lambda$open$0(SocketStream.java:85)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:85)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:233)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.lookupServerDescription(DefaultServerMonitor.java:219)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.run(DefaultServerMonitor.java:176)
Caused by: java.net.ConnectException: Connection refused: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:672)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:547)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:602)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:633)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:76)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:104)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:79)
	... 3 common frames omitted
2025-09-20 17:24:19 - Disable delta property : false
2025-09-20 17:24:19 - Single vip registry refresh property : null
2025-09-20 17:24:19 - Force full registry fetch : false
2025-09-20 17:24:19 - Application is null : false
2025-09-20 17:24:19 - Registered Applications size is zero : true
2025-09-20 17:24:19 - Application version is -1: false
2025-09-20 17:24:19 - Getting all instance registry info from the eureka server
2025-09-20 17:24:19 - The response status is 200
2025-09-20 17:24:22 - Waiting for server to become available for operation with ID 11. Remaining time: 29996 ms. Selector: ReadPreferenceServerSelector{readPreference=primary}, topology description: {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: no further information}}].
2025-09-20 17:24:52 - error: org.springframework.dao.DataAccessResourceFailureException: Timed out while waiting for a server that matches ReadPreferenceServerSelector{readPreference=primary}. Client view of cluster state is {type=UNKNOWN, servers=[{address=localhost:27017, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.ConnectException: Connection refused: no further information}}]
